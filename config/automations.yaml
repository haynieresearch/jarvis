#**********************************************************
#* CATEGORY    HOME ASSISTANT AUTOMATION
#* GROUP       HOME AUTOMATION
#* AUTHOR      LANCE HAYNIE <LANCE@HAYNIEMAIL.COM>
#**********************************************************
#Jarvis Home Automation
#Copyright 2020 Haynie IPHC, LLC
#Developed by Haynie Research & Development, LLC
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.#
#You may obtain a copy of the License at
#http://www.apache.org/licenses/LICENSE-2.0
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

#**********************************************************
# HVAC
#**********************************************************
- id: climate_downstairs_off_to_on_ac
  alias: Downstairs Climate Off to On AC
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: climate.downstairs
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        above: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_ac_day
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The downstairs thermostat has been turned off, so I am turning it back on."

- id: climate_downstairs_off_to_on_heat
  alias: Downstairs Climate Off to On Heat
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: climate.downstairs
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        below: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_heat_day
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The downstairs thermostat has been turned off, so I am turning it back on. "

- id: climate_upstairs_off_to_on_ac
  alias: Upstairs Climate Off to On AC
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: climate.upstairs
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        above: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_ac_day_alt
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The upstairs thermostat has been turned off, so I am turning it back on."

- id: climate_upstairs_off_to_on_heat
  alias: Upstairs Climate Off to On Heat
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: climate.upstairs
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        below: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_heat_day_alt
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The upstairs thermostat has been turned off, so I am turning it back on."

- id: climate_downstairs_max_temp
  alias: Downstairs Max Temp
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.climate_downstairs_temp
    above: !secret max_hvac_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_ac_day
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The maximum downstairs temperature has been reached, I am turning on the air conditioning."

- id: climate_upstairs_max_temp
  alias: Upstairs Max Temp
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.climate_upstairs_temp
    above: !secret max_hvac_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_ac_day_alt
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The maximum upstairs temperature has been reached, I am turning on the air conditioning."

- id: climate_downstairs_min_temp
  alias: Downstairs Min Temp
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.climate_downstairs_temp
    below: !secret min_hvac_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_heat_day
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The minimuim downstairs temperature has been reached, I am turning on the heater."

- id: climate_upstairs_min_temp
  alias: Upstairs Min Temp
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.climate_upstairs_temp
    below: !secret min_hvac_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_heat_day_alt
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The minimuim upstairs temperature has been reached, I am turning on the heater."

- id: climate_downstairs_ac_day_set
  alias: Downstairs AC Day Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        above: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_ac_day
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: cool

- id: climate_upstairs_ac_day_set
  alias: Upstairs AC Day Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        above: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_ac_day_alt
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: cool

- id: climate_downstairs_heat_day_set
  alias: Downstairs Heat Day Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        below: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_heat_day
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: heat

- id: climate_upstairs_heat_day_set
  alias: Upstairs Heat Day Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        below: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_heat_day_alt
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: heat

- id: climate_downstairs_ac_night_set
  alias: Downstairs AC Night Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        above: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_ac_night
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: cool

- id: climate_upstairs_ac_night_set
  alias: Upstairs AC Night Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        above: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_ac_night_alt
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: cool

- id: climate_downstairs_heat_night_set
  alias: Downstairs Heat Night Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        below: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_heat_night
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: heat

- id: climate_upstairs_heat_night_set
  alias: Upstairs Heat Night Set
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: numeric_state
        entity_id: state.outside_temp
        below: !secret hvac_outside_trigger_temp
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_heat_night_alt
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: heat

- id: climate_downstairs_ac_day
  alias: Downstairs AC Day
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_down_temp
    above: !secret max_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '21:00:00'
        after: '07:00:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_ac_day
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature downstairs is getting a bit warm with an average temperature of {{ trigger.to_state.state }}. I am going to turn on the air conditioning."

- id: climate_upstairs_ac_day
  alias: Upstairs AC Day
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_up_temp
    above: !secret max_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '21:00:00'
        after: '07:00:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_ac_day_alt
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature upstairs is getting a bit warm with an average temperature of {{ trigger.to_state.state }}. I am going to turn on the air conditioning."

- id: climate_downstairs_heat_day
  alias: Downstairs Heat Day
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_down_temp
    below: !secret min_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '21:00:00'
        after: '07:00:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_heat_day
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature downstairs is getting a bit cold with an average temperature of {{ trigger.to_state.state }}. I am going to turn on the heater."

- id: climate_upstairs_heat_day
  alias: Upstairs Heat Day
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_up_temp
    below: !secret min_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '21:00:00'
        after: '07:00:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_heat_day_alt
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature upstairs is getting a bit cold with an average temprature of {{ trigger.to_state.state }}. I am going to turn on the heater."

- id: climate_downstairs_ac_night
  alias: Downstairs AC Night
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_down_temp
    above: !secret max_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '06:59:00'
        after: '21:01:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_ac_night
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature downstairs is getting a bit warm with an average temperature of {{ trigger.to_state.state }}. I am going to turn on the air conditioning."

- id: climate_upstairs_ac_night
  alias: Upstairs AC Night
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_up_temp
    above: !secret max_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '06:59:00'
        after: '21:01:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_ac_night_alt
        state: cool
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: cool
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature upstairs is getting a bit warm with an average temperature of {{ trigger.to_state.state }}. I am going to turn on the air conditioning."

- id: climate_downstairs_heat_night
  alias: Downstairs Heat Night
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_down_temp
    below: !secret min_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '21:00:00'
        after: '07:00:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.downstairs
        temperature: !secret hvac_set_temp_heat_night
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature downstairs is getting a bit cold with an average temperature of {{ trigger.to_state.state }}. I am going to turn on the heater."

- id: climate_upstairs_heat_night
  alias: Upstairs Heat Night
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_up_temp
    below: !secret min_hvac_temp
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.hvacautomation
        state: 'on'
      - condition: time
        before: '06:59:00'
        after: '21:01:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.upstairs
        temperature: !secret hvac_set_temp_heat_night_alt
        state: heat
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.upstairs
        state: heat
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, The average temperature upstairs is getting a bit cold with an average temprature of {{ trigger.to_state.state }}. I am going to turn on the heater."

#**********************************************************
# LIGHTING
#**********************************************************
- id: lighting_outdoor_sunset
  alias: Outdoor Lighting Sunset
  initial_state: 'on'
  trigger:
    platform: time
    at: '19:00:00'
  action:
    - service: light.turn_on
      entity_id: light.exterior_lights
    - delay:
        seconds: 0.5
    - service: scene.turn_on
      data_template:
        entity_id:
          "{% if states.sensor.random_outside_lights.state == '1' %}scene.outside_blue
          {% elif states.sensor.random_outside_lights.state == '2' %}scene.color_loop
          {% elif states.sensor.random_outside_lights.state == '3' %}scene.outside_orange
          {% elif states.sensor.random_outside_lights.state == '4' %}scene.outside_pink
          {% elif states.sensor.random_outside_lights.state == '5' %}scene.outside_purple
          {% elif states.sensor.random_outside_lights.state == '6' %}scene.outside_red
          {% endif %}"
    - delay:
        seconds: 0.5
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message:
          "{% if states.sensor.random_outside_lights.state == '1' %}{{ states.sensor.jarvis_greeting.state }}, its getting dark outside so I am going to turn the outside lights on. Tonight, I think I will make the outside lights blue.
          {% elif states.sensor.random_outside_lights.state == '2' %}{{ states.sensor.jarvis_greeting.state }}, its getting dark outside so I am going to turn the outside lights on. Tonight, I think I will make the outside lights go through a color loop.
          {% elif states.sensor.random_outside_lights.state == '3' %}{{ states.sensor.jarvis_greeting.state }}, its getting dark outside so I am going to turn the outside lights on. Tonight, I think I will make the outside lights orange.
          {% elif states.sensor.random_outside_lights.state == '4' %}{{ states.sensor.jarvis_greeting.state }}, its getting dark outside so I am going to turn the outside lights on. Tonight, I think I will make the outside lights pink.
          {% elif states.sensor.random_outside_lights.state == '5' %}{{ states.sensor.jarvis_greeting.state }}, its getting dark outside so I am going to turn the outside lights on. Tonight, I think I will make the outside lights purple.
          {% elif states.sensor.random_outside_lights.state == '6' %}{{ states.sensor.jarvis_greeting.state }}, its getting dark outside so I am going to turn the outside lights on. Tonight, I think I will make the outside lights red.
          {% endif %}"

- id: lighting_outdoor_sunrise
  alias: Outdoor Lighting Sunrise
  initial_state: 'on'
  trigger:
    platform: time
    at: '07:00:00'
  action:
    - service: light.turn_off
      entity_id: light.exterior_lights
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, just so you are aware, I am turning the outside lights off."

- id: tv_backlight_daily_on
  alias: TV Backlight Daily On
  initial_state: 'on'
  trigger:
    platform: time
    at: '8:00:00'
  action:
    - service: light.turn_on
      entity_id: light.living_room_tv
    - delay:
        seconds: 0.5
    - service: scene.turn_on
      entity_id: scene.living_room_tv_color_loop

- id: led_lights_off
  alias: Family Room Desk LED Daily On
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  action:
    - service: light.turn_off
      entity_id: light.living_room_tv
    - service: light.turn_off
      entity_id: light.family_room_desk

- id: family_room_desk_led_daily_on
  alias: Family Room Desk LED Daily On
  initial_state: 'on'
  trigger:
    platform: time
    at: '8:00:00'
  action:
    - service: light.turn_on
      entity_id: light.family_room_desk
    - delay:
        seconds: 0.5
    - service: scene.turn_on
      entity_id: scene.family_room_desk_color_loop

- id: master_shower_colorloop
  alias: Master Shower Color Loop
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: light.master_bathroom
    to: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.master_shower_color_loop

#**********************************************************
# SECURITY
#**********************************************************
- id: security_armed
  alias: Security Armed
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - alarm_control_panel.home_alarm
    from: 'disarmed'
    to: 'pending'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.hvacautomation
    - service: climate.set_away_mode
      data:
        entity_id: climate.downstairs
        away_mode: 'on'
    - service: climate.set_away_mode
      data:
        entity_id: climate.downstairs
        away_mode: 'on'
    - service: shell_command.tts
      data_template:
        message: "The security system will be armed in 30 seconds."

- id: security_disarmed
  alias: Security Armed Home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - alarm_control_panel.home_alarm
    to: 'disarmed'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.hvacautomation
    - service: climate.set_away_mode
      data:
        entity_id: climate.downstairs
        away_mode: 'off'
    - service: climate.set_away_mode
      data:
        entity_id: climate.downstairs
        away_mode: 'off'
    - service: shell_command.tts
      data_template:
        message: "The security system has been disarmed."

- id: security_alert_1
  alias: Security Alert 1
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - alarm_control_panel.home_alarm
    from: 'armed_away'
    to: 'pending'
  action:
    - service: shell_command.tts
      data_template:
        message: "The security system has been triggered, whole home image capture has been completed. You have thirty seconds until the alarm will sound and emergency services will be notified."

- id: security_alert_2
  alias: Security Alert 2
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - alarm_control_panel.home_alarm
    from: 'armed_home'
    to: 'pending'
  action:
    - service: shell_command.tts
      data_template:
        message: "The security system has been triggered, whole home image capture has been completed. You have thirty seconds until the alarm will sound and emergency services will be notified."

- id: security_sensors_changed_when_armed
  alias: Sensors Changed When Security Armed
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - group.allpresensesensors
      from: 'off'
      to: 'on'
      for:
        seconds: 30
  condition:
    condition: state
    entity_id: alarm_control_panel.home_alarm
    state: 'armed_away'
  action:
    - service: alarm_control_panel.alarm_trigger
      data:
        entity_id: alarm_control_panel.home_alarm
    - service: notify.sms
      data_template:
        message: "ALARM! {{ trigger.to_state.name }} was changed to {{ trigger.to_state.state }} while the alarm system was armed. Reply arm away or arm home to turn off the alarm and rearm the system, or reply disarm to put the system in standby mode. Note: If you do not recieve a response, the command failed."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: security_turn_on_alarm
  alias: Turn On Alarm
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'triggered'
  action:
    - service: homeassistant.turn_on
      entity_id: group.alllights
    - service: homeassistant.turn_on
      entity_id: scene.outside_bright
    - service: script.turn_on
      data:
        entity_id: script.sound_alarm
    - service: persistent_notification.create
      data:
        message: "The home alarm has been activated. Emergency services have been notified."
        title: "Security Alert!"
    - service: shell_command.tts
      data_template:
        message: "I have detected a breach in security while the alarm system was armed. I have called 9 1 1, emergency services has been notifed."

- id: security_turn_off_alarm
  alias: Turn Off Alarm
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'disarmed'
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_home'
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_away'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: alarm_control_panel.home_alarm
        state: 'disarmed'
      - condition: state
        entity_id: input_select.alarmstatus
        state: 'armed_home'
      - condition: state
        entity_id: input_select.alarmstatus
        state: 'armed_away'
  action:
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

- id: security_panic_alarm_on
  alias: Panic Alarm On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.panic
    to: 'on'
  action:
    - service: notify.sms
      data:
        message: "ALARM! The panic alarm was activated! Note: a panic alarm cannot be disabled via SMS messaging."
        target:
          - !secret lance_cell
          - !secret katie_cell
    - service: homeassistant.turn_on
      entity_id: group.alllights
    - service: homeassistant.turn_on
      entity_id: scene.outside_bright
    - service: script.turn_on
      data:
        entity_id: script.sound_alarm
    - service: persistent_notification.create
      data:
        message: "The panic alarm has been activated. Emergency services have been notified."
        title: "Security Alert!"
    - service: shell_command.tts
      data_template:
        message: "Someone has pressed the panic alarm. I have called 9 1 1, emergency services have been notified."

- id: security_panic_alarm_off
  alias: Panic Alarm Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.panic
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

- id: security_upstairs_panic_alarm_on
  alias: Upstairs Panic Alarm On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: switch.upstairs_panic
    to: 'on'
  action:
    - service: notify.sms
      data:
        message: "ALARM! The upstairs panic alarm was activated! Note: a panic alarm cannot be disabled via SMS messaging."
        target:
          - !secret lance_cell
          - !secret katie_cell
    - service: homeassistant.turn_on
      entity_id: group.alllights
    - service: homeassistant.turn_on
      entity_id: scene.outside_bright
    - service: script.turn_on
      data:
        entity_id: script.sound_alarm

- id: security_upstairs_panic_alarm_off
  alias: Upstairs Panic Alarm Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: switch.upstairs_panic
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

- id: security_sound_alarm_on
  alias: Sound Alarm On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.sound_alarm
    to: 'on'
  action:
    - service: script.turn_on
      data:
        entity_id: script.sound_alarm

- id: security_sound_alarm_off
  alias: Sound Alarm Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.sound_alarm
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

- id: security_garage_alarm_on
  alias: Garage Alarm On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.garage_alarm
    to: 'on'
  action:
    - service: script.turn_on
      data:
        entity_id: script.garage_alarm

- id: security_garage_alarm_off
  alias: Garage Alarm Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.garage_alarm
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.garage_alarm
    - service: script.turn_off
      data:
        entity_id: script.garage_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: sswitch.garage_warning_light

- id: security_garage_hazard_on
  alias: Garage hazard On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.garage_hazard
    to: 'on'
  action:
    - service: script.turn_on
      data:
        entity_id: script.garage_hazard
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "The garage hazard light has been turned on. Do not enter the garage until the red light is no longer flashing."

- id: security_garage_hazard_off
  alias: Garage hazard Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.garage_hazard
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.garage_hazard
    - service: script.turn_off
      data:
        entity_id: script.garage_hazard_loop
    - service: homeassistant.turn_off
      data:
        entity_id: sswitch.garage_warning_light
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "The garage hazard light has been turned off. You are now able to enter the garage."

- id: security_silance_alarm_after_15_min
  alias: Silence Alarm After 15 Minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'triggered'
      for:
        minutes: 15
  action:
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm
    - service: script.turn_off
      data:
        entity_id: script.sound_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

#**********************************************************
# FIRE ALARMS
#**********************************************************
- id: fire_sensor_on
  alias: Fire Sensor On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.smoke_and_co_smoke_detected
    to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.firealarm
    - service: homeassistant.turn_off
      entity_id: group.allfans

- id: fans_off_when_fire
  alias: Fans off When Fire
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.allfans
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.firealarm
        state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: group.allfans
    - service: shell_command.tts
      data_template:
        message: "Smoke has been detected in the house. I am turning off all the fans."

- id: excessive_heat_when_fire
  alias: Excessive Heat When Fire
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id:
        - group.alltemperaturesensors
      above: 100
  condition:
    condition: state
    entity_id: input_boolean.firealarm
    state: 'on'
  action:
    - service: shell_command.tts
      data_template:
        message: "Excessive heat detected in {{ trigger.to_state.name }} with a temperature of {{ trigger.to_state.state }}. The seat of the fire may be nearby."
    - service: notify.sms
      data_template:
        message: "Excessive heat detected in {{ trigger.to_state.name }} with a temperature of {{ trigger.to_state.state }}. The seat of the fire may be nearby."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: motion_when_fire
  alias: Motion Sensors Changed When Fire Alarm
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - group.allpresensesensors
      from: 'off'
      to: 'on'
      for:
        seconds: 30
  condition:
    condition: state
    entity_id: input_boolean.firealarm
    state: 'on'
  action:
    - service: shell_command.tts
      data_template:
        message: "Motion detected in {{ trigger.to_state.name }} durning an active fire alarm."
    - service: notify.sms
      data_template:
        message: "Motion detected in {{ trigger.to_state.name }} durning an active fire alarm."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: fire_sensor_off
  alias: Fire Sensor Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.smoke_and_co_smoke_detected
    to: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.firealarm

- id: security_fire_alarm_on
  alias: Fire Alarm On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.firealarm
    to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: group.alllights
    - service: homeassistant.turn_on
      entity_id: scene.outside_bright
    - service: script.turn_on
      data:
        entity_id: script.panic_alarm
    - service: script.turn_on
      data:
        entity_id: script.sos_alarm
    - service: notify.sms
      data:
        message: "FIRE ALARM! A fire alarm at {{ states.sensor.home_address.state }} was triggered! Reply Cancel fire to turn off the alarm. Note: If you do not recieve a response, the command failed."
        target:
          - !secret lance_cell
          - !secret katie_cell
    - service: persistent_notification.create
      data:
        message: "Smoke has been detected in the house. Please evacuate and call 911"
        title: "Fire Alarm!"
    - service: shell_command.tts
      data_template:
        message: "Smoke has been detected in the house. Please evacuate and call 9 1 1."

- id: security_fire_alarm_off
  alias: Fire Alarm Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.firealarm
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.sos_alarm
    - service: script.turn_off
      data:
        entity_id: script.sos_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

- id: co_sensor_on
  alias: CO Sensor On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.smoke_and_co_co_detected
    to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.coalarm
    - service: homeassistant.turn_on
      entity_id: group.allfans

- id: fans_on_when_co
  alias: Fans on When CO
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.allfans
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.coalarm
        state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: group.allfans
    - service: shell_command.tts
      data_template:
        message: "Carbon monoxide has been detected in the house. I am turning on all the fans."

- id: co_sensor_off
  alias: CO Sensor Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.smoke_and_co_co_detected
    to: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.coalarm

- id: security_co_alarm_on
  alias: CO Alarm On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.coalarm
    to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: group.alllights
    - service: homeassistant.turn_on
      entity_id: scene.outside_bright
    - service: script.turn_on
      data:
        entity_id: script.panic_alarm
    - service: script.turn_on
      data:
        entity_id: script.sos_alarm
    - service: notify.sms
      data:
        message: "CARBON MONOXIDE ALARM! A carbon monoxide alarm at {{ states.sensor.home_address.state }} was triggered! Reply Cancel carbon to turn off the alarm. Note: If you do not recieve a response, the command failed."
        target:
          - !secret lance_cell
          - !secret katie_cell
    - service: persistent_notification.create
      data:
        message: "Carbon monoxide has been detected in the house. Please evacuate and call 911"
        title: "Carbon Monoxide Alarm!"
    - service: shell_command.tts
      data_template:
        message: "Carbon monoxide has been detected in the house. Please evacuate and call 9 1 1."

- id: security_co_alarm_off
  alias: CO Alarm Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.coalarm
    to: 'off'
  action:
    - service: script.turn_off
      data:
        entity_id: script.sos_alarm
    - service: script.turn_off
      data:
        entity_id: script.sos_alarm_loop
    - service: homeassistant.turn_off
      data:
        entity_id: switch.gpio_switch_21

#**********************************************************
# SECURITY NOTIFICATIONS
#**********************************************************
- id: security_alarm_notify_5_min
  alias: Alarm Notification 5 Minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'triggered'
      for:
        minutes: 5
  action:
    - service: notify.sms
      data:
        message: "ALARM! The home alarm at {{ states.sensor.home_address.state }} has been activated for 5 minutes without intervention. Emergency services will be notified if the alarm continues for 10 minutes. Reply arm away or arm home to turn off the alarm and rearm the system, or reply disarm to put the system in standby mode. Note: If you do not recieve a response, the command failed."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: security_panic_alarm_notify_5_min
  alias: Panic Alarm Notification 5 Minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.panic
      to: 'on'
      for:
        minutes: 5
  action:
    - service: notify.sms
      data:
        message: "ALARM! The panic alarm at {{ states.sensor.home_address.state }} has been activated for 5 minutes without intervention. Emergency services will be notified if the alarm continues for 10 minutes. Note: a panic alarm cannot be disabled via SMS messaging."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: security_upstairs_panic_alarm_notify_5_min
  alias: Upstairs Panic Alarm Notification 5 Minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.upstairs_panic
      to: 'on'
      for:
        minutes: 5
  action:
    - service: notify.sms
      data:
        message: "ALARM! The upstairs panic alarm at {{ states.sensor.home_address.state }} has been activated for 5 minutes without intervention. Emergency services will be notified if the alarm continues for 10 minutes. Note: a panic alarm cannot be disabled via SMS messaging."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: security_fire_alarm_notify_5_min
  alias: Fire Alarm Notification 5 Minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.firealarm
      to: 'on'
      for:
        minutes: 5
  action:
    - service: notify.sms
      data:
        message: "FIRE ALARM! A fire alarm at {{ states.sensor.home_address.state }} has been activated for 5 minutes without intervention. Emergency services will be notified if the alarm continues for 10 minutes. Reply Cancel fire to turn off the alarm. Note: If you do not recieve a response, the command failed."
        target:
          - !secret lance_cell
          - !secret katie_cell

- id: security_co_alarm_notify_5_min
  alias: CO Alarm Notification 5 Minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.coalarm
      to: 'on'
      for:
        minutes: 5
  action:
    - service: notify.sms
      data:
        message: "CARBON MONOXIDE ALARM! A carbon monoxide alarm at {{ states.sensor.home_address.state }} has been activated for 5 minutes without intervention. Emergency services will be notified if the alarm continues for 10 minutes. Reply Cancel carbon to turn off the alarm. Note: If you do not recieve a response, the command failed."
        target:
          - !secret lance_cell
          - !secret katie_cell

#**********************************************************
# MEDIA
#**********************************************************
- id: system_volume_slider
  alias: System Volume Slider
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.systemvolume
  action:
    - service: shell_command.volume
      data_template:
        cmd: "{{ states.input_number.systemvolume.state }}"

- id: system_volume
  alias: System Volume
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.system_volume
  action:
     service: input_number.select_value
     data_template:
       entity_id: input_number.systemvolume
       value: "{{ states.sensor.system_volume.state }}"

- id: system_volume_day
  alias: System Volume Day
  initial_state: 'on'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
    - service: shell_command.volume
      data_template:
        cmd: "100"

- id: system_volume_night
  alias: System Volume Night
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
    - service: shell_command.volume
      data_template:
        cmd: "90"

- id: white_noise_loop_on
  alias: White Noise Loop On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.whitenoise
    to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.whitenoise
    - service: input_boolean.turn_off
      entity_id: input_boolean.naturesounds

- id: white_noise_loop_off
  alias: White Noise Loop Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.whitenoise
    to: 'off'
  action:
    - service: script.turn_off
      entity_id: script.whitenoise
    - service: shell_command.killwhitenoise

- id: nature_sounds_loop_on
  alias: Nature Sounds Loop On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.naturesounds
    to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.naturesounds
    - service: input_boolean.turn_off
      entity_id: input_boolean.whitenoise

- id: nature_sounds_loop_off
  alias: Nature Sounds Loop Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.naturesounds
    to: 'off'
  action:
    - service: script.turn_off
      entity_id: script.naturesounds
    - service: shell_command.killnaturesounds

- id: relaxing_music_loop_on
  alias: Relaxing Music Loop On
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.relaxingmusic
    to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.relaxingmusic

- id: relaxing_music_loop_off
  alias: Relaxing Music Loop Off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.relaxingmusic
    to: 'off'
  action:
    - service: script.turn_off
      entity_id: script.relaxingmusic
    - service: shell_command.killrelaxingmusic

#**********************************************************
# NOTIFICATIONS & MISC
#**********************************************************
- id: home_assistant_start
  alias: Home Assistant Start
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: shell_command.volume
      data_template:
        cmd: "100"

- id: home_assistant_stop
  alias: Home Assistant Stop
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: stop
  action:
    - service: shell_command.winxpstop

- id: update_notification
  alias: Update Available Notification
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.sms
      data:
        message: "HomeAssistant {{ states('updater.updater') }} is now available."
        target:
          - !secret lance_cell
    - service: persistent_notification.create
      data:
        message: "HomeAssistant {{ states('updater.updater') }} is now available."
        title: "Update Available"

- id: cpu_use_50
  alias: CPU Use 50
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.cpu_use
    above: 50
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My CPU usage is getting high, I am currently at {{ states.sensor.cpu_use.state }} per cent."

- id: cpu_use_75
  alias: CPU Use 75
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.cpu_use
    above: 75
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My CPU usage is now serious, I am currently at {{ states.sensor.cpu_use.state }} per cent."

- id: cpu_use_90
  alias: CPU Use 90
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.cpu_use
    above: 90
  action:
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.5
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My CPU usage is now critical, I am currently at {{ states.sensor.cpu_use.state }} percent. If an intervention is not performed, I may soon crash."

- id: cpu_use_95
  alias: CPU Use 95
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.cpu_use
    above: 95
  action:
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.5
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My CPU usage is now beyond critical, I am currently at {{ states.sensor.cpu_use.state }} percent. I am going to try and reboot myself."
    - delay:
        seconds: 5
    - service: shell_command.restart_system

- id: ram_use_70
  alias: Ram Use 70
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.ram_use
    above: 70
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My memory usage is getting high, I am currently at {{ states.sensor.ram_use.state }} per cent."

- id: ram_use_80
  alias: Ram Use 80
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.ram_use
    above: 80
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My memory usage is now serious, I am currently at {{ states.sensor.ram_use.state }} per cent."

- id: ram_use_90
  alias: Ram Use 90
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.ram_use
    above: 90
  action:
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.5
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My memory usage is now critical, I am currently at {{ states.sensor.ram_use.state }} percent. If an intervention is not performed, I may soon crash."

- id: ram_use_95
  alias: Ram Use 95
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.ram_use
    above: 95
  action:
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.5
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My memory usage is now beyond critical, I am currently at {{ states.sensor.ram_use.state }} percent. I am going to try and reboot myself."
    - delay:
        seconds: 5
    - service: shell_command.restart_system

- id: 15_min_load_3
  alias: 15 Min Load 3
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_load_15m
    above: 3
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My 15 minute load average is getting high, I am currently at {{ states.sensor.sensor.average_load_15m.state }}."

- id: 15_min_load_4
  alias: 15 Min Load 4
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_load_15m
    above: 4
  action:
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.5
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My 15 minute load average is now critical, I am currently at {{ states.sensor.average_load_15m.state }}."

- id: 15_min_load_5
  alias: 15 Min Load 5
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.average_load_15m
    above: 5
  action:
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.5
    - service: shell_command.alarm_sound
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "My 15 minute load average has exceeded my limitations, I am currently at {{ states.sensor.average_load_15m.state }}. I am going to try and reboot myself."
    - delay:
        seconds: 5
    - service: shell_command.restart_system

- id: lance_sunday_trash_reminder
  alias: Lance Sunday Trash Reminder
  initial_state: 'on'
  trigger:
    platform: time
    at: '21:30:00'
  condition:
    condition: time
    weekday:
      - sun
  action:
    - service: notify.sms
      data_template:
        message: "Lance: Take the trash bins out."
        target:
          - !secret lance_cell
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Lance, dont forget to take the trash bins out."

- id: morning_wx
  alias: Morning WX
  initial_state: 'on'
  trigger:
    platform: time
    at: '8:30:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Good morning all, Here is your mid morning weather briefing. It is currently {{ states.sensor.outside_temp.state }} degrees outside and {{ states.weather.home.state }}."

- id: afternoon_wx
  alias: Afternoon WX
  initial_state: 'on'
  trigger:
    platform: time
    at: '13:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Good afternoon all, Here is your afternoon weather briefing. It is currently {{ states.sensor.outside_temp.state }} degrees outside and {{ states.weather.home.state }}."

- id: evening_wx
  alias: Evening WX
  initial_state: 'on'
  trigger:
    platform: time
    at: '19:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Good evening all, Here is your evening weather briefing. It is currently {{ states.sensor.outside_temp.state }} degrees outside and {{ states.weather.home.state }}."

- id: restart_on_no_network
  alias: Restart on no Network
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.internet_status
      to: 'DOWN'
      for:
        minutes: 15
  action:
    - service: shell_command.restart_system

- id: backup_system_data
  alias: Backup System Data
  initial_state: 'on'
  trigger:
    platform: time
    at: '01:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:

- id: speedtest_download
  alias: Speedtest Download
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    hours: '*'
    minutes: '15'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.speedtest_download
        below: !secret download_mbps_trigger
      - condition: time
        before: '22:00:00'
        after: '08:00:00'
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Warning, our network download speed is low. My last check shows a download speed of {{ states.sensor.speedtest_download.state }} mega bits per second."

- id: speedtest_upload
  alias: Speedtest Upload
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    hours: '*'
    minutes: '30'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.speedtest_upload
        below: !secret upload_mbps_trigger
      - condition: time
        before: '22:00:00'
        after: '08:00:00'
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Warning, our network upload speed is low. My last check shows an upload speed of {{ states.sensor.speedtest_upload.state }} mega bits per second."

- id: speedtest_ping
  alias: Speedtest Ping
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    hours: '*'
    minutes: '45'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.speedtest_ping
        above: !secret ping_trigger
      - condition: time
        before: '22:00:00'
        after: '08:00:00'
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "Warning, our network latency is high. My last check shows a ping of {{ states.sensor.speedtest_ping.state }} miliseconds."

- id: ifttt_webhook
  alias: ifttt webhook
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ifttt_webhook_received
      event_data:
        action: 'call_service'
  action:
    - service_template: '{{ trigger.event.data.service }}'
      data_template:
        message: '{{ trigger.event.data.cmd }}'

- id: katie_iphone_battery_50
  alias: Katie Phone Battery 50
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.katies_iphone_battery_state
    below: 50
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Katie, your iPhone battery has reached {{ states.sensor.katies_iphone_battery_state.state }} per cent."

- id: katie_iphone_battery_25
  alias: Katie Phone Battery 25
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.katies_iphone_battery_state
    below: 25
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Katie, your iPhone battery is now critically low and has reached {{ states.sensor.katies_iphone_battery_state.state }} per cent."

- id: lance_iphone_battery_50
  alias: Lance Phone Battery 50
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.myphone_battery_state
    below: 50
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Lance, your iPhone battery has reached {{ states.sensor.myphone_battery_state.state }} per cent."

- id: lance_iphone_battery_25
  alias: Lance Phone Battery 25
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.myphone_battery_state
    below: 25
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Lance, your iPhone battery is now critically low and has reached {{ states.sensor.myphone_battery_state.state }} per cent."

- id: wes_iphone_battery_50
  alias: Wes Phone Battery 50
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.wesleys_iphone_battery_state
    below: 50
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Wesley, your iPhone battery has reached {{ states.sensor.wesleys_iphone_battery_state.state }} per cent."

- id: wes_iphone_battery_25
  alias: Wes Phone Battery 25
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.wesleys_iphone_battery_state
    below: 25
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Wesley, your iPhone battery is now critically low and has reached {{ states.sensor.wesleys_iphone_battery_state.state }} per cent."

- id: emma_iphone_battery_50
  alias: Emma Phone Battery 50
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.littles_iphone_6_plus_battery_state
    below: 50
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Emma, your iPhone battery has reached {{ states.sensor.littles_iphone_6_plus_battery_state.state }} per cent."

- id: emma_iphone_battery_25
  alias: Emma Phone Battery 25
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.littles_iphone_6_plus_battery_state
    below: 25
  action:
    - service: shell_command.alert
    - delay:
        seconds: 0.125
    - service: shell_command.tts
      data_template:
        message: "{{ states.sensor.jarvis_greeting.state }}, Emma, your iPhone battery is now critically low and has reached {{ states.sensor.littles_iphone_6_plus_battery_state.state }} per cent."

- id: minecraft_server
  alias: Minecraft Server
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.minecraft_server_players_online
  condition:
    condition: template
    value_template: '{{ trigger.to_state.state | int > trigger.from_state.state | int }}'
  action:
    - service: shell_command.tts
      data_template:
        message: "Hey! Someone joined the Minecraft Server. There are now {{ states.sensor.minecraft_server_players_online.state }} players online."

- id: speedtest
  alias: Speedtest
  initial_state: 'on'
  trigger:
    platform: time_pattern
    minutes: 0
  action:
    - service: shell_command.speedtest
